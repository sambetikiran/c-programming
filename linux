## 1. basics of parent and child process relations
```c
#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>
/*
int main()
{
        int id;
        id=fork();
        if(id==0)
        {
                printf("child process\n");
        }
        else
        {
                printf("parent process\n");
        }
}*/
/*
int main()
{
        int id=fork();
        switch(id)
        {
                case 1:
                        printf("error");
                        break;
                case 0:
                        printf("child process\n");
                        break;
                default:
                        printf("parent process\n");
                        break;
        }
}*/
/*
int main()
{
        int id=fork();
        if(id==0)
        {
                sleep(5);
                printf("child process\n");
        }
        else
        {
                sleep(10);
                printf("parent process\n");
        }
}*/
/*
int main()
{
        int stat;
        int id=fork();
        if(id==0)
        {
                printf("child");
                exit(5);
        }
        id=wait(&stat);
        printf("%d",WEXITSTATUS(stat));
}*/
```
